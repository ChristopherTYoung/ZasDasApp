name: automated testing
on:
  pull_request:
    types: [opened, closed, synchronize]

jobs:
    createnamespace:
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
        runs-on: self-hosted
        steps:
        - name: kubectl
          if: github.event.action == 'opened'
          run: |
            kubectl create namespace ${{github.event.pull_request.number}}-zasanddas

    pushtodocker:
       runs-on: self-hosted
       if: github.event.action == "synchronize" || contains(needs.*.result, 'success')
       needs: createnamespace
       steps: 
       - name: Login to Docker Hub
         uses: docker/login-action@v3
         with:
           username: ${{ vars.DOCKERHUB_USERNAME }}
           password: ${{ secrets.DOCKERHUB_TOKEN }}
       - name: Create container and push
         run: |
            ls
            docker build \
            -t nhowell02/zasanddas:${{github.run_id}} \
            .


            docker push nhowell02/zasanddas:${{github.run_id}}
    pushtokubernetes:
        runs-on: self-hosted
        needs: [pushtodocker]
        steps:
        - name: deploy to kubernetes
          run: |
            export NAMESPACE=${{github.event.pull_request.number}}-
            export SUBDOMAIN=${{github.event.pull_request.number}}.
            export BUILD_NUMBER=${{github.run_id}}

            for FILE in "K8s"/*
            do
              cat "$FILE" | envsubst | kubectl apply -f -
            done

    destroynamespace:
        if: github.event.action == 'closed'
        runs-on: self-hosted
        steps:
        - name: Delete namespace
          run: |
           kubectl delete namespace ${{github.event.pull_request.number}}-zasanddas

    notifydiscord:
        runs-on: self-hosted
        needs: [pushtokubernetes, destroynamespace]
        if: always() && contains(needs.*.result, 'success')
        steps: 
        - name: Discord notifications
          env:
            DISCORD_WEBHOOK:  ${{secrets.DISCORD_WEBHOOK}}
          uses: Ilshidur/action-discord@master
          with:
              args: '@everyone Pull request environment ${{github.event.action}}: ${{github.ref}}-zasanddas'
    example_comment_pr:
       runs-on: ubuntu-latest
       needs: createnamespace
       steps:
       - name: Checkout
         uses: actions/checkout@v3

       - name: Comment PR
         uses: thollander/actions-comment-pull-request@v3
         with:
             message: |
                ${{github.event.pull_request.number}}.zasanddas.duckdns.org

